//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace Conf.Gameplay
{
   
public partial class RoguelikeInfos
{

     private readonly Conf.Gameplay.RoguelikeInfo _data;

    public RoguelikeInfos(ByteBuf _buf)
    {
        int n = _buf.ReadSize();
        if (n != 1) throw new SerializationException("table mode=one, but size != 1");
        _data = Conf.Gameplay.RoguelikeInfo.DeserializeRoguelikeInfo(_buf);
        PostInit();
    }


    /// <summary>
    /// 最大等级
    /// </summary>
     public int EvolutionLevelLimit => _data.EvolutionLevelLimit;
    /// <summary>
    /// 升级对应需要的经验值
    /// </summary>
     public System.Collections.Generic.List<int> EvolutionExps => _data.EvolutionExps;
    /// <summary>
    /// 等级对应的 Attribute.ID
    /// </summary>
     public System.Collections.Generic.List<int> EvolutionAttrs => _data.EvolutionAttrs;
    /// <summary>
    /// 触发技能三选一的等级
    /// </summary>
     public System.Collections.Generic.List<int> EvolutionLevelPoints => _data.EvolutionLevelPoints;
    /// <summary>
    /// 三选一，选项列表
    /// </summary>
     public System.Collections.Generic.List<int> EvolutionOptions => _data.EvolutionOptions;
    /// <summary>
    /// 怪物凋零/回收距离
    /// </summary>
     public float MonsterWitherDis => _data.MonsterWitherDis;
    /// <summary>
    /// 掉落物回收距离（玩家身后）
    /// </summary>
     public float DropItemRecycleDis => _data.DropItemRecycleDis;
    /// <summary>
    /// 掉落物引力的力量
    /// </summary>
     public float DropItemAttractionStrength => _data.DropItemAttractionStrength;
    /// <summary>
    /// 掉落经验值引力状态持续时间
    /// </summary>
     public float DropExpAttractionDuration => _data.DropExpAttractionDuration;
    /// <summary>
    /// 飘星星引力状态持续时间
    /// </summary>
     public float BlowStarMoveDuration => _data.BlowStarMoveDuration;

    public void Resolve(Dictionary<string, object> _tables)
    {
        _data.Resolve(_tables);
        PostResolve();
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        _data.TranslateText(translator);
    }

    
    partial void PostInit();
    partial void PostResolve();
}

}