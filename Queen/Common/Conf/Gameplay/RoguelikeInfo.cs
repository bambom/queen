//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace Conf.Gameplay
{
public sealed partial class RoguelikeInfo :  Bright.Config.BeanBase 
{
    public RoguelikeInfo(ByteBuf _buf) 
    {
        EvolutionLevelLimit = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);EvolutionExps = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); EvolutionExps.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);EvolutionAttrs = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); EvolutionAttrs.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);EvolutionLevelPoints = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); EvolutionLevelPoints.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);EvolutionOptions = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); EvolutionOptions.Add(_e0);}}
        MonsterWitherDis = _buf.ReadFloat();
        DropItemRecycleDis = _buf.ReadFloat();
        DropItemAttractionStrength = _buf.ReadFloat();
        DropExpAttractionDuration = _buf.ReadFloat();
        BlowStarMoveDuration = _buf.ReadFloat();
        PostInit();
    }

    public static RoguelikeInfo DeserializeRoguelikeInfo(ByteBuf _buf)
    {
        return new Conf.Gameplay.RoguelikeInfo(_buf);
    }

    /// <summary>
    /// 最大等级
    /// </summary>
    public int EvolutionLevelLimit { get; private set; }
    /// <summary>
    /// 升级对应需要的经验值
    /// </summary>
    public System.Collections.Generic.List<int> EvolutionExps { get; private set; }
    /// <summary>
    /// 等级对应的 Attribute.ID
    /// </summary>
    public System.Collections.Generic.List<int> EvolutionAttrs { get; private set; }
    /// <summary>
    /// 触发技能三选一的等级
    /// </summary>
    public System.Collections.Generic.List<int> EvolutionLevelPoints { get; private set; }
    /// <summary>
    /// 三选一，选项列表
    /// </summary>
    public System.Collections.Generic.List<int> EvolutionOptions { get; private set; }
    /// <summary>
    /// 怪物凋零/回收距离
    /// </summary>
    public float MonsterWitherDis { get; private set; }
    /// <summary>
    /// 掉落物回收距离（玩家身后）
    /// </summary>
    public float DropItemRecycleDis { get; private set; }
    /// <summary>
    /// 掉落物引力的力量
    /// </summary>
    public float DropItemAttractionStrength { get; private set; }
    /// <summary>
    /// 掉落经验值引力状态持续时间
    /// </summary>
    public float DropExpAttractionDuration { get; private set; }
    /// <summary>
    /// 飘星星引力状态持续时间
    /// </summary>
    public float BlowStarMoveDuration { get; private set; }

    public const int __ID__ = -914174751;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "EvolutionLevelLimit:" + EvolutionLevelLimit + ","
        + "EvolutionExps:" + Bright.Common.StringUtil.CollectionToString(EvolutionExps) + ","
        + "EvolutionAttrs:" + Bright.Common.StringUtil.CollectionToString(EvolutionAttrs) + ","
        + "EvolutionLevelPoints:" + Bright.Common.StringUtil.CollectionToString(EvolutionLevelPoints) + ","
        + "EvolutionOptions:" + Bright.Common.StringUtil.CollectionToString(EvolutionOptions) + ","
        + "MonsterWitherDis:" + MonsterWitherDis + ","
        + "DropItemRecycleDis:" + DropItemRecycleDis + ","
        + "DropItemAttractionStrength:" + DropItemAttractionStrength + ","
        + "DropExpAttractionDuration:" + DropExpAttractionDuration + ","
        + "BlowStarMoveDuration:" + BlowStarMoveDuration + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}